# -*- coding: utf-8 -*-
"""
Created on Thu Aug 31 12:24:34 2017

@author: xcsliu
北京市|131
上海市|289
广州市|257
深圳市|340
成都市|75
天津市|332
南京市|315
杭州市|179
武汉市|218
重庆市|132
"""
import requests
import json
HEADERS = {'User-Agent': "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36"}
H = {'User-Agent':"Mozilla/5.0 (hp-tablet; Linux; hpwOS/3.0.2; U; de-DE) AppleWebKit/534.6 (KHTML, like Gecko) wOSBrowser/234.40.1 Safari/534.6 TouchPad/1.0"}
url = 'https://chongqing.anjuke.com/v3/ajax/map/sale/facet/?room_num=-1&price_id=-1&area_id=-1&floor=-1&orientation=-1&is_two_years=0&is_school=0&is_metro=0&order_id=0&p=1&zoom=19&lat=29.519606_29.524606&lng=106.525635_106.530635&kw=&maxp=99'
response = requests.get(url, headers=HEADERS)
response_test = requests.get(url, headers=H)
print(response_test.text)

text = response.text

content = json.loads(text)


'https://api.fang.anjuke.com/web/loupan/mapNewlist/?city_id=20&callback=jQuery1113006248457428238563_1502272365154&zoom=16&swlng={106.525635}&swlat={29.519606}&nelng={106.530635}&nelat={29.524606}&'


url_lunkuo = 'http://map.baidu.com/?pcevaname=pc4.1&qt=ext&uid=161a0ed2853aec2e5dd4feac&ext_ver=new&l=12'
# url_lunkuo = 'http://map.baidu.com/?pcevaname=pc4.1&qt=ext&uid=aaaaf39ee7871286f60e7711&ext_ver=new&l=12'
res = requests.get(url_lunkuo)
text = res.text
content = json.loads(text)

print(res.text)
  
      

'''
天河湖滨：
1|11590057.96,4489812.75;11590057.96,4489812.75|11590057.96,4489812.75;
'''

transfer_url = 'http://api.map.baidu.com/geoconv/v1/?coords=11590057.96,4489812.75;11590057.96,4489812.75&from=6&to=5&ak=0yMQoetZ3YOogQyAjr7CcUPBzCT82yBp'
res = requests.get(transfer_url)
text = res.text
content = json.loads(text)      
      
# ===================
# uid 获取：

uid_url = 'http://map.baidu.com/su?wd=洛卡庄园=132&type=0&pc_ver=2'
res = requests.get(uid_url)
text = res.text
content = json.loads(text)    
uid_yangguanghuacheng = 'f739b2653e1479049868b4dd'
uid = 'aaaaf39ee7871286f60e7711'
# =======================      
url_lunkuo = 'http://map.baidu.com/?pcevaname=pc4.1&qt=ext&uid=4cf8d24e38f2c7e49df7798b&ext_ver=new&l=12'
# url_lunkuo = 'http://map.baidu.com/?pcevaname=pc4.1&qt=ext&uid=aaaaf39ee7871286f60e7711&ext_ver=new&l=12'
res = requests.get(url_lunkuo)
text = res.text
content = json.loads(text)

'''
goe:
4|13530673.7809,3639434.1506;13531212.8419,3640017.81497|

1-13530673.7809,3639681.13391,13530683.2233,3639724.06602,
13530706.1959,3639781.24607,13530836.4032,3640017.81497,
13531212.8419,3639759.08261,13531077.9457,3639551.70047,13531071.4645,
3639544.13061,13531050.2453,3639518.72073,13531015.2939,3639488.0738,
13531008.3015,3639477.59048,13531004.3049,3639469.74911,13530970.3606,
3639452.19338,13530909.2502,3639434.1506,13530853.7008,3639438.07861,
13530816.2291,3639445.04014,13530780.7607,3639463.04211,13530730.341,
3639506.14789,13530705.8555,3639533.15018,13530690.7947,3639563.56757,
13530679.1742,3639601.69294,13530675.3122,3639638.02284,13530673.7809,
3639681.13391;
'''
'''
阳光花城：
4|13539659.3175,3637996.53569;13540120.2652,3638569.08849|

1-
13539659.3175,3638357.52132,
13539664.3392,3638375.01582,
13539835.3106,3638451.53113,
13539876.825,3638478.47636,
13539959.0828,3638558.97476,
13540112.7225,3638569.08849,
13540120.2652,3638059.98158,
13540105.5696,3638035.67199,
13540076.6504,3638022.0396,13539977.2326,3638017.02215,13539870.7814,
3638008.45585,13539808.8122,3638003.86961,13539776.3181,3637996.53569,
13539761.3735,3638035.41885,13539750.5261,3638050.73491,13539723.9271,
3638072.65658,13539716.2829,3638087.25667,13539693.9592,3638114.2721,
13539666.5955,3638131.07861,13539686.1046,3638172.55789,13539692.5824,
3638201.58549,13539689.1714,3638250.67959,13539659.3175,3638357.52132;
'''

'''
江畔语林：
11859548.3351,3418688.46711;11859554.3441,3418697.8725;11859563.6529,3418701.23249;11859620.9413,3418707.42204;11859627.2572,3418707.41603;11859636.4542,3418708.22895;11859649.4423,3418713.26353;11859708.9355,3418750.21889;11859717.3597,3418758.52575;11859720.6829,3418756.04431;11859717.7887,3418719.87094;11859726.7632,3418717.85446;11859852.5271,3418720.26952;11859862.9188,3418715.12367;11859866.7952,3418709.98015;11859871.7922,3418611.14167;11859868.244,3418603.56522;11859845.6364,3418593.17986;11859837.1023,3418586.78034;11859830.2229,3418556.15661;11859819.9589,3418544.65889;11859813.105,3418523.78392;11859816.6464,3418508.78435;11859841.4658,3418505.59556;11859870.6303,3418507.32557;11859971.5694,3418486.85843;11859979.573,3418498.05717;11860007.0517,3418491.6578;11860052.6133,3418479.2888;11860087.7161,3418470.79131;11860124.0373,3418458.31893;11860147.6377,3418446.87763;11860175.9989,3418417.3014;11860226.9538,3418327.92833;11860189.4505,3418317.14848;11860148.6664,3418299.99225;11860110.1899,3418291.63168;11860062.3156,3418275.45526;11860037.5815,3418270.20111;11859962.1013,3418284.84866;11859756.5028,3418343.11056;11859721.9301,3418335.93074;11859663.214,3418379.06218;11859644.3837,3418405.06811;11859626.396,3418432.13397;11859589.4412,3418468.07514;11859569.1336,3418517.82586;11859571.4622,3418523.46993;11859576.2517,3418532.46997;11859576.0778,3418543.86916;11859559.9746,3418638.24302;11859552.1834,3418666.397;11859548.3351,3418688.46711;
'''

transfer_url = 'http://api.map.baidu.com/geoconv/v1/?coords=11859548.3351,3418688.46711;11859554.3441,3418697.8725;11859563.6529,3418701.23249;11859620.9413,3418707.42204;11859627.2572,3418707.41603;11859636.4542,3418708.22895;11859649.4423,3418713.26353;11859708.9355,3418750.21889;11859717.3597,3418758.52575;11859720.6829,3418756.04431;11859717.7887,3418719.87094;11859726.7632,3418717.85446;11859852.5271,3418720.26952;11859862.9188,3418715.12367;11859866.7952,3418709.98015;11859871.7922,3418611.14167;11859868.244,3418603.56522;11859845.6364,3418593.17986;11859837.1023,3418586.78034;11859830.2229,3418556.15661;11859819.9589,3418544.65889;11859813.105,3418523.78392;11859816.6464,3418508.78435;11859841.4658,3418505.59556;11859870.6303,3418507.32557;11859971.5694,3418486.85843;11859979.573,3418498.05717;11860007.0517,3418491.6578;11860052.6133,3418479.2888;11860087.7161,3418470.79131;11860124.0373,3418458.31893;11860147.6377,3418446.87763;11860175.9989,3418417.3014;11860226.9538,3418327.92833;11860189.4505,3418317.14848;11860148.6664,3418299.99225;11860110.1899,3418291.63168;11860062.3156,3418275.45526;11860037.5815,3418270.20111;11859962.1013,3418284.84866;11859756.5028,3418343.11056;11859721.9301,3418335.93074;11859663.214,3418379.06218;11859644.3837,3418405.06811;11859626.396,3418432.13397;11859589.4412,3418468.07514;11859569.1336,3418517.82586;11859571.4622,3418523.46993;11859576.2517,3418532.46997;11859576.0778,3418543.86916;11859559.9746,3418638.24302;11859552.1834,3418666.397;11859548.3351,3418688.46711&from=6&to=5&ak=GEPiAH9zkDx5oy4K1Vj7Znw8zmbGhY0M'
                                        
res = requests.get(transfer_url)
text = res.text
content = json.loads(text)      

points = content['result']


import matplotlib.pyplot as plt
x = []
y = []
for p in points:
    x.append(p['x'])
    y.append(p['y'])





for p in points:
    xs, ys = p['x'], p['y']
    axs.plot(xs, ys)
    


# ==========
import numpy as np
plt.figure(figsize=(12,12))
n=1000
#rand 均匀分布和 randn高斯分布
#x=np.random.randn(1,n)
#y=np.random.randn(1,n)
T=np.arctan2(x,y)
plt.scatter(x,y,s=25,marker='o')
#plt.axis([31.21,31.23,-10,10])  
#T:散点的颜色
#s：散点的大小
#alpha:是透明程度
plt.show()





           